#include "File.h"

string filename;

ofstream new_DB(string filename) 
{
    ofstream file(filename + ".txt");
    if (!file.is_open()) 
    {
        cerr << "File creation error." << endl;
        return file;
    }
    cout << "The file has been created." << endl;
    return file;
}

void remove_DB(const string& filename) 
{
    if (remove((filename + ".txt").c_str()) != 0) 
    {
        cerr << "File deletion error." << endl;
        return;
    }
    cout << "the file has been deleted: " << filename << ".txt" << endl;
}

void clear(DoublyList& list)
{
    Node* current = list.head->next; // ???????? ? ???????  ???????? ????? ?????????? ???? head
    Node* temp;

    while (current != list.tail)
    {
        temp = current;
        current = current->next;
        delete temp->data; // ???????????? ??????, ?????????? ??????? ????
        delete temp; // ???????????? ??????, ?????????? ?????
    }

    
    list.head->next = list.tail;// ??????? ??????, ??? ???????? ????????? ?????
    list.tail->prev = list.head;

    
    list.current = (list.head->next == list.tail) ? nullptr : list.head->next;// ?????????? list.current ?? ?????? ???? ? ??????? (???? ??????????)

    cout << "Memory has been successfully cleared." << endl;
}

void save_DB(const DoublyList* list, const string& filename)
{
    ifstream file(filename + ".txt");

    
    if (file.peek() != ifstream::traits_type::eof())// ?????????, ?????????? ?? ???? ? ???? ?? ??
    {
        cerr << "Error: The database file already contains data." << endl;
        file.close();
        return;
    }

    file.close(); // ????????? ???? ??? ??????

    ofstream outFile(filename + ".txt", ios::out | ios::trunc);
    if (!outFile.is_open())
    {
        cerr << "Error creating a file to save the database ." << endl;
        return;
    }

    Node* current = list->head->next; // ???????? ? ???????  ???????? ????? ?????????? ???? head
    while (current != list->tail)
    {
        outFile << current->data->name << endl;
        outFile << current->data->model << endl;
        outFile << current->data->type << endl;
        outFile << current->data->users << endl;
        outFile << current->data->faction << endl;
        outFile << current->data->color_Kayber_Crystal << endl;
        outFile << current->data->typeLightSword << endl;
        outFile << "---" << endl;
        current = current->next;
    }

    outFile.close();
    cout << "The data has been successfully saved to the database file: " << filename << ".txt" << endl;
}


void load_DB(DoublyList& list, const string& filename)
{
    ifstream file(filename + ".txt");
    if (!file.is_open())
    {
        cerr << "Error. Such a text file does not exist or the file could not be opened " << endl;
        return;
    }

    
    if (list.head == nullptr)// ??????? ????????? ???? head ? tail, ???? ??? ?? ??????????
    {
        list.head = new Node;
        list.tail = new Node;
        list.head->next = list.tail;
        list.tail->prev = list.head;
    }

    string line;
    while (getline(file, line))
    {
        if (line == "---")// ???? ??????  ????? "---", ?? ??????? ? ??????????  ????????
        { 
            continue;
        }

        weapon* item = new weapon;
        item->name = line;
        getline(file, item->name);
        getline(file, item->model);
        getline(file, item->type);
        getline(file, item->users);
        getline(file, item->faction);
        getline(file, item->color_Kayber_Crystal);
        getline(file, item->typeLightSword);


        Node* newNode = new Node; // ??????? ????? ???? ? ???????? ??? ? ??????
        newNode->data = item;
        list.tail->prev->next = newNode;
        newNode->prev = list.tail->prev;
        list.tail->prev = newNode;
        newNode->next = list.tail;
    }

    file.close();
    cout << "The data has been successfully uploaded from the file to the database: " << filename << ".txt" << endl;

    // ?????????? ????????? current ?? ?????? ???? ????? ?????????? ???? head
    list.current = list.head->next;
}